<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jackguo.Dao.BusRentMapper">
  <resultMap id="BaseResultMap" type="com.jackguo.vo.BusRentVo">
    <!--@mbg.generated-->
    <!--@Table bus_rent-->
    <id column="id" property="id" />
    <result column="num" property="num" />
    <result column="type" property="type" />
    <result column="rent_price" property="rentPrice" />
    <result column="desposit" property="desposit" />
    <result column="name" property="name" />
    <result column="id_card" property="idCard" />
    <result column="begin_time" property="beginTime" />
    <result column="end_time" property="endTime" />
    <result column="flag" property="flag" />
    <result column="user_id" property="userId" />
    <result column="create_time" property="createTime" />
    <result column="update_time" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, num, `type`, rent_price, desposit, `name`, id_card, begin_time, end_time, flag, 
    user_id, create_time, update_time
  </sql>

  <insert id="insert">
      insert into bus_rent
      (num, `type`, rent_price, desposit, `name`, id_card, begin_time, end_time,user_id )
      value (

      #{num},
      #{type},
      #{rentPrice},
      #{deposit},
      #{name},
      #{idCard},
      #{beginTime},
      #{endTime},
      #{userId}

      )
  </insert>

    <insert id="insertCus">
        insert into bus_rent
        (num, `type`, rent_price, desposit, `name`, id_card, begin_time, end_time )
        value (

        #{num},
        #{type},
        #{rentPrice},
        #{deposit},
        #{name},
        #{idCard},
        #{beginTime},
        #{endTime}


        )
    </insert>

  <select id="selectList" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
        from bus_rent
      <where>
          <if test="num !=null and num != ''">
              and num like concat('%',#{num},'%')
          </if>

          <if test="name !=null and name != ''">
              and name like concat('%',#{name},'%')
          </if>

          <if test="flag !=null and flag != ''">
              and flag =#{flag}
          </if>

          <if test="minBeginTime != null and minBeginTime != ''">
              and begin_time >= #{minBeginTime}
          </if>
          <if test="maxBeginTime != null and maxBeginTime != ''">
              and #{maxBeginTime} >= begin_time
          </if>
      </where>


    </select>


  <update id="updateByFlag">
      update bus_rent set flag=#{flag} where id=#{id} and flag=#{oldFlag}

    </update>

  <select id="selectById" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
        from bus_rent where id=#{id}

  </select>

  <select id="selectListByName" resultMap="BaseResultMap">
      select <include refid="Base_Column_List" />
      from bus_rent where name=#{name}
    </select>
</mapper>